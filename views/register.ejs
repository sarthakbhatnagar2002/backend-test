<!doctype html>
<html>
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />
  <title>Register</title>
</head>
<body class="bg-gray-100 dark:bg-gray-800 h-screen w-screen flex items-center justify-center">

  <div class="bg-white dark:bg-gray-900 p-8 rounded-lg shadow-md w-full max-w-md">
    <h2 class="text-2xl font-semibold mb-6 text-gray-900 dark:text-white">Register</h2>

    <div id="error-container" class="mb-4 hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
      <ul id="error-list" class="list-disc list-inside"></ul>
    </div>

    <form id="register-form" action="/user/register" method="post" class="space-y-4">
      <div>
        <label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
        <input name="username" type="text" id="username" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Sarthak" required />
      </div>
      <div>
        <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email address</label>
        <input name="email" type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="john.doe@company.com" required />
      </div>
      <div>
        <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
        <input name="password" type="password" id="password" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="•••••••••" required />
      </div>
      <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Submit</button>
    </form>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>

  <script>
    const form = document.getElementById('register-form');
    const errorContainer = document.getElementById('error-container');
    const errorList = document.getElementById('error-list');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      errorList.innerHTML = '';
      errorContainer.classList.add('hidden');

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch(form.action, {
          method: form.method,
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          const result = await response.json();

          if (result.errors) {
            result.errors.forEach(err => {
              const li = document.createElement('li');
              li.textContent = err.msg;
              errorList.appendChild(li);
            });
            errorContainer.classList.remove('hidden');
          } else if (result.message) {
            const li = document.createElement('li');
            li.textContent = result.message;
            errorList.appendChild(li);
            errorContainer.classList.remove('hidden');
          }
        } else {
          window.location.href = 'frontendURL';
        }
      } catch (error) {
        errorList.innerHTML = '<li>Something went wrong. Please try again later.</li>';
        errorContainer.classList.remove('hidden');
      }
    });
  </script>

</body>
</html>
